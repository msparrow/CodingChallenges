import pytest
from solutions.solution_139 import two_sum as twoSum

# Test cases for Two Sum II - Input Array Is Sorted

test_cases = [
    ([2, 7, 11, 15], 9, [1, 2]),
    ([2, 3, 4], 6, [1, 3]),
    ([-1, 0], -1, [1, 2]),
    ([0, 0, 3, 4], 0, [1, 2]),
    ([3, 2, 4], 6, [1, 3]),
    ([3, 3], 6, [1, 2]),
    ([-1, -1], -2, [1, 2]),
    ([1, 2, 3, 4, 5], 10, [4, 5]),
    ([1, 2, 3, 4, 5], 7, [3, 4]),
    ([1, 2, 3, 4, 5], 2, [1,2]),
    ([1, 2, 3, 4, 5], 9, [4,5]),
    ([1, 2, 3, 4, 5], 6, [2, 4]),
    ([5, 25, 75], 100, [2, 3]),
    ([-10, -5, 0, 5, 10], 0, [3, 4]),
    ([-10, -5, 0, 5, 10], -5, [2, 3]),
    ([-10, -5, 0, 5, 10], 15, [4, 5]),
    ([-10, -5, 0, 5, 10], 5, [3, 5]),
    ([1,1,1,1,1], 2, [1, 2]),
    ([1,1,1,1,1], 1, [1,1]), #Edge case: duplicates should be handled correctly
    ([0,0,0,0,0], 0, [1,2]), #Edge case: all zeros
    ([], 0, []), #Edge case: Empty array
    ([1], 1, []), #Edge case: Single element array
    ([1,2], 3, [1, 2]), #Edge case: Two element array, target sum equal to sum
    ([1,2], 1, []), #Edge case: Two element array, target less than smaller element
    ([1,2], 4, []), #Edge case: Two element array, target greater than sum
    ([-1, 0, 1, 2], 0, [1, 3]), #Edge case: Target of 0
    ([-1, 0, 1, 2], 1, [2, 3]), #Edge case: Target of 1
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11, [1, 10]),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 101, []), #Edge case: target larger than sum of all elements
    ([-10, -9, -8, -7, -6], -17, [1, 5]),
    ([1000, 2000, 3000], 5000, [2, 3]),
    ([5,5,5,5,5], 10, [1,2]),
    ([-5,-5,-5,-5,-5], -10, [1,2]),
    ([1, 2, 3, 4, 5, 6], 7, [1, 6]),
    ([1, 2, 3, 4, 5, 6], 13, [4, 6]),
    ([1,2,3,4,5,6], 1, []),
    ([1,2,3,4,5,6], 12, [3, 6]),
    ([1, 2, 3, 4, 5, 6], 8, [2, 6]),
    ([1, 2, 3, 4, 5, 6], 11, [3, 5]),
    ([1, 2, 3, 4, 5, 6], 9, [2, 5]),
    ([100, 100, 100, 100, 100], 200, [1, 2]),
    ([-100, -100, -100, -100, -100], -200, [1, 2]),
    ([1, 0, 1], 2, [1, 3]),
    ([0, 0, 0], 0, [1, 2]),
    ([1, 1000000000], 1000000001, [1, 2]),
    ([-1000000000, 1], -999999999, [1, 2]),
    ([1, 5, 7, 11, 13], 14, [2, 4]),
    ([1, 5, 7, 11, 13], 24, [4, 5]),
    ([1, 5, 7, 11, 13], 18, [3, 5]),
    ([1, 5, 7, 11, 13], 6, [1, 2]),
    ([2, 3, 4, 5, 6, 7], 11, [2, 6]),
    ([2, 3, 4, 5, 6, 7], 10, [1, 6]),
    ([2, 3, 4, 5, 6, 7], 12, [3, 6]),
    ([2, 3, 4, 5, 6, 7], 5, [1, 2])
]


@pytest.mark.parametrize("numbers, target, expected", test_cases)
def test_two_sum(numbers, target, expected):
    assert twoSum(numbers, target) == expected

