
import pytest
from solutions.solution_26 import count_and_say

@pytest.mark.parametrize("n, expected", [
    (1, "1"),
    (2, "11"),
    (3, "21"),
    (4, "1211"),
    (5, "111221"),
    (6, "312211"),
    (7, "13112221"),
    (8, "1113213211"),
    (9, "31131211131221"),
    (10, "13211311123113112211"),
    (11, "11131221133112132113212221"),
    (12, "3113112221232112111312211312113211"),
    (13, "132113213221133112132123222113111221131221"),
    (14, "1113122113121113123112111311222123211211131221132132211331121321232221"),
    (15, "311311222113111221131221123113111231121113112221121321132132212321121113122113121113222113112211"),
    (16, "1321132132211331121321232221121113122113121113222112111312211312113213221133112132113221122112132221"),
    (17, "11131221131211131231121113112221121321132132212321121113122113121113222112111312211312113213221133112132123222113112211"),
    (18, "3113112221131112211312211231131112311211131122211213211321322123211211131221131211132221121113122113121132132211331121321132211221121322211213211322211312113211"),
    (19, "1321132132211331121321232221121113122113121113222112111312211312113213221133112132113221122112132221121113122113121113222112111312211312113213221133112132123222113112211"),
    (20, "11131221131211131231121113112221121321132132212321121113122113121113222112111312211312113213221133112132113221122112132221121113122113121113222112111312211312113213221133112132123222113112211")
])
def test_count_and_say(n, expected):
    assert count_and_say(n) == expected
