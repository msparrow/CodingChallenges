
import pytest
from solutions.solution_7 import is_palindrome

@pytest.mark.parametrize("x, expected", [
    (121, True),
    (-121, False),
    (10, False),
    (-101, False),
    (0, True),
    (1, True),
    (11, True),
    (12321, True),
    (123321, True),
    (12345, False),
    (123454321, True),
    (1234554321, True),
    (123456789, False),
    (987654321, False),
    (111111111, True),
    (1111111111, True),
    (121212121, True),
    (1212121212, False),
    (2147447412, True),
    (2147483647, False),
    (-2147483648, False),
    (1000000001, True),
    (1000021, False),
    (1001, True),
    (10101, True),
    (101101, True),
    (1221, True),
    (12321, True),
    (1234321, True),
    (123454321, True),
    (12345654321, True),
    (1234567654321, True),
    (123456787654321, True),
    (12345678987654321, True),
    (10001, True),
    (100001, True),
    (1001001, True),
    (10011001, True),
    (1234, False),
    (12, False),
    (120, False),
    (1210, False),
    (1212, False),
    (12121, True),
    (121212, False),
    (1212121, True),
    (12121212, False),
    (121212121, True),
    (1212121212, False)
])
def test_is_palindrome(x, expected):
    assert is_palindrome(x) == expected
