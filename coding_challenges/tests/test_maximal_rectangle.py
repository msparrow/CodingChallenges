
import pytest
from solutions.solution_66 import maximal_rectangle

@pytest.mark.parametrize("matrix, expected", [
    ([["1","0","1","0","0"],["1","0","1","1","1"],["1","1","1","1","1"],["1","0","0","1","0"]], 6),
    ([["0"]], 0),
    ([["1"]], 1),
    ([["0","0"]], 0),
    ([["1","1"]], 2),
    ([["1","0"],["1","1"]], 2),
    ([["0","0","0"],["0","0","0"],["0","0","0"]], 0),
    ([["1","1","1"],["1","1","1"],["1","1","1"]], 9),
    ([["1","0","1","0","0"],["1","0","1","1","1"],["1","1","1","1","1"],["1","0","0","1","0"]], 6),
    ([["0","1"],["1","0"]], 1),
    ([["0","1","1"],["1","1","1"],["0","1","1"]], 4),
    ([["1","1","1","1"],["1","1","1","1"],["1","1","1","1"]], 12),
    ([["1","0","1","1","1"],["0","1","0","1","0"],["1","1","0","1","1"],["1","1","0","1","1"],["0","1","1","1","1"]], 6),
    ([["1"]*5 for _ in range(5)], 25),
    ([["0"]*5 for _ in range(5)], 0),
    ([["1","0"]*2 for _ in range(4)], 2),
    ([["1","1","0","1"],["1","1","0","1"],["1","1","1","1"]], 6),
    ([["1","0","1","0","1","0"]], 1),
    ([["1"],["0"],["1"],["0"],["1"],["0"]], 1)
])
def test_maximal_rectangle(matrix, expected):
    assert maximal_rectangle(matrix) == expected
