
import pytest
from solutions.solution_3 import length_of_longest_substring

@pytest.mark.parametrize("s, expected", [
    ("abcabcbb", 3),
    ("bbbbb", 1),
    ("pwwkew", 3),
    ("", 0),
    (" ", 1),
    ("au", 2),
    ("aab", 2),
    ("dvdf", 3),
    ("abcde", 5),
    ("abcda", 4),
    ("anviaj", 5),
    ("tmmzuxt", 5),
    ("abcabcad", 4),
    ("abacaba", 3),
    ("abccba", 3),
    ("abcdcba", 4),
    ("abacdefg", 7),
    ("abacdefga", 7),
    ("abacdefgab", 8),
    ("abacdefgabc", 8),
    ("abacdefgabcd", 8),
    ("abacdefgabcde", 8),
    ("abacdefgabcdef", 8),
    ("abacdefgabcdefg", 8),
    ("abacdefgabcdefgh", 8),
    ("abacdefgabcdefghi", 8),
    ("abacdefgabcdefghij", 8),
    ("abacdefgabcdefghijk", 8),
    ("abacdefgabcdefghijkl", 8),
    ("abacdefgabcdefghijklm", 8),
    ("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()", 62),
    ("a", 1),
    ("ab", 2),
    ("aa", 1),
    ("aba", 2),
    ("abb", 2),
    ("aabbaa", 2),
    ("aabcdaa", 4),
    ("aabcdab", 5),
    ("aabcdabc", 5),
    ("aabcdabcd", 5),
    ("aabcdabcde", 5),
    ("aabcdefg", 7),
    ("aabcdefga", 7),
    ("aabcdefgab", 8),
    ("aabcdefgabc", 8),
    ("aabcdefgabcd", 8),
    ("aabcdefgabcde", 8),
    ("aabcdefgabcdef", 8),
    ("aabcdefgabcdefg", 8)
])
def test_length_of_longest_substring(s, expected):
    assert length_of_longest_substring(s) == expected
