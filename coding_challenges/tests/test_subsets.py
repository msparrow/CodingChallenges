import pytest
from solutions.solution_57 import subsets

@pytest.mark.parametrize("nums, expected", [
    ([1, 2, 3], sorted([[], [1], [2], [1, 2], [3], [1, 3], [2, 3], [1, 2, 3]])),
    ([0], sorted([[], [0]])),
    ([1, 2], sorted([[], [1], [2], [1, 2]])),
    ([], [[]]),
    ([4, 5, 6], sorted([[], [4], [5], [6], [4, 5], [4, 6], [5, 6], [4, 5, 6]])),
    ([-1, 0, 1], sorted([[], [-1], [0], [1], [-1, 0], [-1, 1], [0, 1], [-1, 0, 1]])),
    ([10], sorted([[], [10]])),
    ([1, 1, 2], sorted([[], [1], [2], [1, 1], [1, 2], [1, 1, 2]])),
    ([1, 2, 3, 4], sorted([[], [1], [2], [3], [4], [1, 2], [1, 3], [1, 4], [2, 3], [2, 4], [3, 4], [1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4], [1, 2, 3, 4]])),
    ([5, 2, 9], sorted([[], [5], [2], [9], [5, 2], [5, 9], [2, 9], [5, 2, 9]])),
    ([1, 1, 1], sorted([[], [1], [1, 1], [1, 1, 1]])),
    ([1, 2, 2], sorted([[], [1], [2], [1, 2], [2, 2], [1, 2, 2]])),
    ([3, 2, 1], sorted([[], [3], [2], [1], [3, 2], [3, 1], [2, 1], [3, 2, 1]])),
    ([7], sorted([[], [7]])),
    ([1, 2, 3, 4, 5], sorted([[], [1], [2], [3], [4], [5], [1, 2], [1, 3], [1, 4], [1, 5], [2, 3], [2, 4], [2, 5], [3, 4], [3, 5], [4, 5], [1, 2, 3], [1, 2, 4], [1, 2, 5], [1, 3, 4], [1, 3, 5], [1, 4, 5], [2, 3, 4], [2, 3, 5], [2, 4, 5], [3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 4, 5], [1, 3, 4, 5], [2, 3, 4, 5], [1, 2, 3, 4, 5]])),
    ([0, 0], sorted([[], [0], [0, 0]])),
    ([-1, -2, -3], sorted([[], [-1], [-2], [-3], [-1, -2], [-1, -3], [-2, -3], [-1, -2, -3]])),
    ([10, 20], sorted([[], [10], [20], [10, 20]])),
    ([1, 1, 2, 2], sorted([[], [1], [2], [1, 1], [1, 2], [2, 2], [1, 1, 2], [1, 2, 2], [1, 1, 2, 2]])),
    ([6, 7, 8], sorted([[], [6], [7], [8], [6, 7], [6, 8], [7, 8], [6, 7, 8]]))
])
def test_subsets(nums, expected):
    result = subsets(nums)
    assert sorted([sorted(t) for t in result]) == sorted([sorted(t) for t in expected])