
import pytest
from solutions.solution_143 import getRow

# Test cases for Pascal's Triangle II

test_cases = [
    (0, [1]),
    (1, [1, 1]),
    (2, [1, 2, 1]),
    (3, [1, 3, 3, 1]),
    (4, [1, 4, 6, 4, 1]),
    (5, [1, 5, 10, 10, 5, 1]),
    (6, [1, 6, 15, 20, 15, 6, 1]),
    (7, [1, 7, 21, 35, 35, 21, 7, 1]),
    (8, [1, 8, 28, 56, 70, 56, 28, 8, 1]),
    (9, [1, 9, 36, 84, 126, 126, 84, 36, 9, 1]),
    (10, [1, 10, 45, 120, 210, 252, 210, 120, 45, 10, 1]),
    #Edge Cases
    (-1, []), #Handle negative input
    (-5, []), #Handle negative input
    (100, [1, 100, 4950, 161700, 3921225, 75287520, 1192052400, 15952673200, 176726319000, 1679600000000, 13075040000000, 87500000000000, 488500000000000, 2252250000000000, 8848800000000000, 29496000000000000, 800817436800000000, 1847560000000000000, 35974430000000000000, 601080390000000000000, 8870200000000000000000, 111930000000000000000000, 1200000000000000000000000, 1119300000000000000000000, 88702000000000000000000, 6010803900000000000000, 359744300000000000000, 18475600000000000000, 800817436800000000, 294960000000000000, 88488000000000000, 22522500000000000, 4885000000000000, 875000000000000, 130750400000000, 16796000000000, 17672631900000, 15952673200, 1192052400, 75287520, 3921225, 161700, 4950, 100, 1]), #Large input

    #More test cases for various inputs
    (11, [1, 11, 55, 165, 330, 462, 462, 330, 165, 55, 11, 1]),
    (12, [1, 12, 66, 220, 495, 792, 924, 792, 495, 220, 66, 12, 1]),
    (13, [1, 13, 78, 286, 715, 1287, 1716, 1716, 1287, 715, 286, 78, 13, 1]),
    (14, [1, 14, 91, 364, 1001, 2002, 3003, 3432, 3003, 2002, 1001, 364, 91, 14, 1]),
    (15, [1, 15, 105, 455, 1365, 3003, 5005, 6435, 6435, 5005, 3003, 1365, 455, 105, 15, 1]),
]


@pytest.mark.parametrize("rowIndex, expected", test_cases)
def test_getRow(rowIndex, expected):
    assert getRow(rowIndex) == expected

