
import pytest
from solutions.solution_27 import combination_sum

@pytest.mark.parametrize("candidates, target, expected", [
    ([2, 3, 6, 7], 7, sorted([[2, 2, 3], [7]])),
    ([2, 3, 5], 8, sorted([[2, 2, 2, 2], [2, 3, 3], [3, 5]])),
    ([2], 1, []),
    ([1], 1, [[1]]),
    ([1], 2, [[1, 1]]),
    ([1, 2, 3], 3, sorted([[1, 2], [3], [1, 1, 1]])),
    ([1, 2, 3], 4, sorted([[1, 1, 2], [1, 3], [2, 2], [1, 1, 1, 1]])),
    ([1, 2, 3], 5, sorted([[1, 1, 3], [1, 2, 2], [2, 3], [1, 1, 1, 2]])),
    ([1, 2, 3], 6, sorted([[1, 2, 3], [2, 2, 2], [3, 3], [1, 1, 1, 3], [1, 1, 2, 2]])),
    ([1, 2, 3], 7, sorted([[1, 3, 3], [2, 2, 3], [1, 1, 2, 3], [1, 1, 1, 1, 3], [1, 1, 1, 2, 2]])),
    ([2, 4, 6, 8], 10, sorted([[2, 2, 2, 2, 2], [2, 2, 6], [2, 4, 4], [2, 8], [4, 6]])),
    ([2, 3, 5], 10, sorted([[2, 2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 5], [5, 5]])),
    ([2, 3, 6, 7], 1, []),
    ([7, 3, 2], 18, sorted([[2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 3, 3], [2, 2, 2, 2, 3, 7], [2, 2, 2, 3, 3, 3, 3], [2, 2, 7, 7], [2, 3, 3, 3, 7], [3, 3, 3, 3, 3, 3], [3, 3, 6, 6], [3, 7, 8], [6, 6, 6]])),
    ([2, 4, 8], 16, sorted([[2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 8], [2, 2, 4, 8], [2, 4, 4, 6], [4, 4, 4, 4], [4, 4, 8], [8, 8]])),
    ([10, 20, 30], 60, sorted([[10, 10, 10, 10, 10, 10], [10, 10, 10, 30], [10, 20, 30], [20, 20, 20], [30, 30]])),
    ([1, 1, 1, 1], 4, [[1, 1, 1, 1]])
])
def test_combination_sum(candidates, target, expected):
    result = combination_sum(candidates, target)
    assert sorted([sorted(t) for t in result]) == sorted([sorted(t) for t in expected])
